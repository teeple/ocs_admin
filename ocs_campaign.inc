<?php

module_load_include( 'inc', 'ocs_admin', 'ocs_campaign_action');
module_load_include( 'inc', 'ocs_admin', 'ocs_campaign_event');
module_load_include( 'inc', 'ocs_admin', 'ocs_campaign_cond');
module_load_include( 'inc', 'ocs_admin', 'ocs_campaign_export');

/*
** campaign rules form
*/
function ocs_admin_campaign_rule_form( $form, &$form_state, $campaign_id = NULL)
{
	$form['#attached']['css'] = array(drupal_get_path('module', 'ocs_admin') . '/ocs_admin.css');
	$form['#description'] = '<p>Edit Campaign Rules</p>';
	$form['#campaign_id'] = $campaign_id;

    drupal_add_library( 'system', 'drupal.ajax');

  //****************************
  // get all events
  //****************************

	$events = ocs_admin_campaign_events_load_all( $campaign_id);
    $conditions = ocs_admin_campaign_conditions_load_all( $campaign_id);
    $actions = ocs_admin_campaign_actions_load_all( $campaign_id);
    dpm( $events, 'all event list');

	foreach( $events as $rule_id => $rules) {
        $rule = $rules[0];
        $event_id = $rule['event_id'];
        if ( ! isset( $form['#event'][$event_id])) {
            // add new event
            $node = node_load( $event_id);
            $client = taxonomy_term_load( $node->field_ocs_client_id['und'][0]['tid']);

            $info = array(
                'title' => $node->title,
                'name' => $client->name,
                'description' => t( '<em>%event</em> event generated by the system <em>%client</em>',
                    array( '%event' => $node->title, '%client' => $client->name)),
                '#attributes' => array( 'class' => array('menu-enabled')),
                'weight' => array(
                    '#type' => 'weight',
                    '#delta' => 50,
        //        '#default_value' => $item['weight'],
                    '#default_value' => 50,
                    '#title_display' => 'invisible',
                    '#title' => t('Weight for @title', array('@title' => $node->title)),
              ),
            );

            $form['#event'][$event_id] = $info;
            $form['#event'][$event_id]['#event_name'] = $node->title;

            // Build a list of operations
            $operations = array();
            $t_arg = array( '@campaign' => $rule['campaign_id'], '@event' => $rule['event_id']);
            $q_arg = array( 'query' => array( 'event_name' => $node->title));

            $operations['add'] = array( 
                '#type' => 'link',
                '#title' => t('Add'),
                '#href' => t( 'ocs_admin/campaign/@campaign/event/add', $t_arg),
            );

            $operations['delete'] = array( 
              '#type' => 'link',
              '#title' => t('Delete'),
              '#href' => t( 'ocs_admin/campaign/@campaign/event/@event/delete', $t_arg),
              '#options' => $q_arg,
              );

            $form['#event'][$event_id]['operations'] = $operations;
        }

        // add rules
		// Build a list of operations for rules
		$operations = array();
		$t_arg = array( '@campaign' => $rule['campaign_id'], '@rule' => $rule_id, '@event' => $rule['event_id']);
        $q_arg = array( 'query' => array( 
            'event_name' => $form['#event'][$event_id]['#event_name'],
            'rule_name' => $rule['rule_name']));

        $operations['add'] = array( 
            '#type' => 'link',
            '#title' => t('Add'),
            '#href' => t( 'ocs_admin/campaign/@campaign/event/@event/rule/add', $t_arg),
            '#options' => $q_arg,
        );
        
		$operations['delete'] = array( 
		    '#type' => 'link',
		    '#title' => t('Delete'),
		    '#href' => t( 'ocs_admin/campaign/@campaign/rule/@rule/delete', $t_arg),
		  );

		$operations['edit'] = array( 
		    '#type' => 'link',
		    '#title' => t('Edit'),
		    '#href' => t( 'ocs_admin/campaign/@campaign/rule/@rule/edit', $t_arg),
            '#options' => $q_arg,
		  );

		$form['#event'][$event_id]['rule'][$rule_id] = array(
            'info' => $rule,
            'operations' => $operations);
        $form['#rule'][$rule_id]['cond'] = array();
        $form['#rule'][$rule_id]['action'] = array();

        $form['#rule'][$rule_id]['#empty_action_text'] = 
            t('There are no actions yet. <a href="@url">Add Actions</a>.',
                array( '@url' => url( t( 'ocs_admin/campaign/@campaign/rule/@rule/action/add', $t_arg), 
                    $q_arg)));
        $form['#rule'][$rule_id]['#empty_cond_text'] = 
            t('There are no conditions yet. <a href="@url">Add Conditions</a>.',
                array( '@url' => url( t( 'ocs_admin/campaign/@campaign/rule/@rule/cond/0/add', $t_arg), 
                    $q_arg)));

        // add conditions
        $form['#rule'][$rule_id]['#no_cond'] = 0;
        if ( isset( $conditions[$rule_id])) {

            // add operations for 'Conditions(OR)'
            $operations = array();
            $operations['add'] = array( 
                '#type' => 'link',
                '#title' => t('Add OR'),
                '#href' => t( 'ocs_admin/campaign/@campaign/rule/@rule/cond/0/add', $t_arg),
                '#options' => $q_arg,
            );

            $operations['delete'] = array( 
                '#type' => 'link',
                '#title' => t('Delete OR'),
                '#href' => t( 'ocs_admin/campaign/@campaign/rule/@rule/cond/0/delete', $t_arg),
                '#options' => $q_arg,
            );

            $form['#rule'][$rule_id]['cond_operations'] = $operations;
            $form['#rule'][$rule_id]['#no_cond'] = count( $conditions[$rule_id]);

            foreach( $conditions[$rule_id] as $cond) {
                $info = array(
                    '#type' => 'item',
                    '#title' => $cond['cond_name'],
                );

                $cond_id = $cond['cond_id'];
                $t_arg['@cond'] = $cond_id;
                $q_arg['query']['name'] = $cond['cond_name'];

                $operations = array();
                // 'cond_idx' value must not be passed to 'Add AND' link
                $operations['add'] = array( 
                    '#type' => 'link',
                    '#title' => t('Add AND'),
                    '#href' => t( 'ocs_admin/campaign/@campaign/rule/@rule/cond/@cond/add', $t_arg),
                    '#options' => $q_arg,
                );

                // 'cond_idx' value must not be passed to 'Add AND' link
                $q_arg['query']['idx'] = $cond['cond_idx'];
                $operations['delete'] = array( 
                    '#type' => 'link',
                    '#title' => t('Delete'),
                    '#href' => t( 'ocs_admin/campaign/@campaign/rule/@rule/cond/@cond/delete', $t_arg),
                    '#options' => $q_arg,
                );

                $operations['edit'] = array( 
                    '#type' => 'link',
                    '#title' => t('Edit'),
                    '#href' => t( 'ocs_admin/campaign/@campaign/rule/@rule/cond/@cond/edit', $t_arg),
                    '#options' => $q_arg,
                );

                $form['#rule'][$rule_id]['cond'][$cond_id][] = array(
                    'info' => $info,
                    'operations' => $operations,
                );
            }

        }

        // add actions
        if ( isset( $actions[$rule_id])) {
            unset( $q_arg['query']['name']);
            unset( $q_arg['query']['idx']);

            // add operations for 'Action'
            $operations = array();
            $operations['add'] = array( 
                '#type' => 'link',
                '#title' => t('Add'),
                '#href' => t( 'ocs_admin/campaign/@campaign/rule/@rule/action/add', $t_arg),
                '#options' => $q_arg,
            );

            $operations['delete'] = array( 
                '#type' => 'link',
                '#title' => t('Delete All'),
                '#href' => t( 'ocs_admin/campaign/@campaign/rule/@rule/action/0/delete', $t_arg),
                '#options' => $q_arg,
            );

            $form['#rule'][$rule_id]['action_operations'] = $operations;

            foreach( $actions[$rule_id] as $action) {
                $info = array(
                    '#type' => 'item',
                    '#title' => $action['action_name'],
                );

                $t_arg['@action'] = $action['action_id'];
                $q_arg['query']['name'] = $action['action_name'];

                $operations = array();

                $operations['add'] = array( 
                    '#type' => 'item',
                    '#value' => '',
                );

                $operations['delete'] = array( 
                    '#type' => 'link',
                    '#title' => t('Delete'),
                    '#href' => t( 'ocs_admin/campaign/@campaign/rule/@rule/action/@action/delete', $t_arg),
                    '#options' => $q_arg,
                  );

                $operations['edit'] = array( 
                    '#type' => 'link',
                    '#title' => t('Edit'),
                    '#href' => t( 'ocs_admin/campaign/@campaign/rule/@rule/action/@action/edit', $t_arg),
                    '#options' => $q_arg,
                  );

                $action_id = $action['action_id'];
                $form['#rule'][$rule_id]['action'][$action_id]['info'] = $info;
                $form['#rule'][$rule_id]['action'][$action_id]['operations'] = $operations;
            }
         }
	}

	$form['#caption'] = '<h3>Events</h3>';
	$form['#empty_text'] = t('There are no events yet. <a href="@url">Add Event.</a>',
        array( '@url' => url( t('ocs_admin/campaign/@campaign/event/add', 
                                array( '@campaign' => $campaign_id)))));
	$form['#no_rule'] = t('There are no rules yet. ');

    return $form;
}


/**
 * Recursive helper function for ocs_group_form().
 *
 * @param $tree
 *   The menu_tree retrieved by menu_tree_data.
 */
function _ocs_campaign_tree_form($tree) 
{
//	dpm( $tree, 'condition tree');

  $form = &drupal_static(__FUNCTION__, array('#tree' => TRUE));
  foreach ($tree as $data) {
    $title = '';
    $item = $data;
    if ($item ) {
      $mlid = 'mlid:' . $item['mlid'];
      $form[$mlid]['#item'] = $item;
      $form[$mlid]['#attributes'] = array( 'class' => array('menu-enabled'));
      $form[$mlid]['title']['#markup'] = $item['title'];
      $form[$mlid]['weight'] = array(
        '#type' => 'weight',
        '#delta' => 50,
//        '#default_value' => $item['weight'],
        '#default_value' => 50,
        '#title_display' => 'invisible',
        '#title' => t('Weight for @title', array('@title' => $item['title'])),
      );
       $form[$mlid]['mlid'] = array(
        '#type' => 'hidden',
        '#value' => $item['mlid'],
      );
      $form[$mlid]['plid'] = array(
        '#type' => 'hidden',
        '#default_value' => $item['plid'],
      );
      // Build a list of operations
      $operations = array();

	  if ( $item['title'] == 'OR' || $item['title'] == 'AND') {
		  $operations['edit'] = array(
			'#type' => 'markup',
			'#markup' => '',
		  );
		  $operations['delete'] = array(
			'#type' => 'link',
			'#title' => t('delete'),
			'#href' => t( 'ocs_admin/campaign/@campaign/rule/nojs/@cond/delete',
				array( '@campaign' => $data['db']['campaign_id'],
					'@cond' => $item['mlid'])),
			'#options' => array( 'html' => TRUE, 
				'attributes' => array( 'class' => array( 'use-ajax'))),
		  );
	  }
	  else {
		  $operations['edit'] = array( 
			'#type' => 'link',
			'#title' => t('edit'),
			'#href' => t( 'ocs_admin/campaign/@campaign/cond/@cond/edit',
				array( '@campaign' => $data['db']['campaign_id'],
					'@cond' => $item['mlid'])),
			'#options' => array( 'query' => array( 'name' => $item['title'])),
			);
		  $operations['delete'] = array( 
			'#type' => 'link',
			'#title' => t('delete'),
			'#href' => t( 'ocs_admin/campaign/@campaign/cond/@cond/delete',
				array( '@campaign' => $data['db']['campaign_id'],
					'@cond' => $item['mlid'])),
			'#options' => array( 'query' => array( 'name' => $item['title'])),
			);
	  }
      $form[$mlid]['operations'] = $operations;  
    }

    if ( isset($data['below'])) {
      _ocs_campaign_tree_form($data['below']);
    }
  }
  return $form;
}

function ocs_admin_campaign_rule_form_validate( $form, &$form_state)
{
	if ( $form_state['values']['op'] != 'Cancel') {
		dpm( $form_state['values'], 'form state');
		$child_count = array();
		foreach( element_children( $form) as $mlid) {
			if ( isset( $form[$mlid]['#item'])) {
				$element = $form[$mlid];
				$plid =  'mlid:' . $element['plid']['#value'];
				if ( $element['plid']['#value'] != 0) $child_count[$plid][] = $mlid;
				if ( ! isset($child_count[$mlid])) $child_count[$mlid] = array();
				dsm( $element['#item']['title'] . ': ' .$plid . '->' . $mlid . '  '. $element['plid']['#default_value']);
			}
		}

		dpm( $child_count, 'child count');
		foreach( $child_count as $mlid => $child) {
			$element = $form[$mlid]['#item'];
			if ( $element['title'] == 'AND' || $element['title'] == 'OR') {
				if ( count( $child) < 2) {
					form_set_error( $mlid, t( 'Invalid @op condition. More than 2 operands are required.', array( '@op' => $element['title'])));
				}
			}
			else {
				if ( count( $child) != 0) {
					form_set_error( $mlid, t( 'Invalid condition: "@op". No operands are allowed.', array( '@op' => $element['title'])));
				}
			}
		}
	}
}


function ocs_admin_campaign_rule_form_submit( $form, &$form_state)
{
	if ( $form_state['values']['op'] != 'Cancel') {
		dpm( $form_state, 'form_state submit');

		$order = array_flip( array_keys( $form_state['input']));
		dpm( $order, 'order');

		$form = array_merge( $order, $form);

		$updated_items = array();
		$fields = array( 'plid' => 'parent_id');

		foreach( element_children( $form) as $mlid) {
			if ( isset( $form[$mlid]['#item'])) {
				$element = $form[$mlid];
				// update any fields that have changed in this menu item.
				//dpm( $element['#item']['db'], 'element');
				foreach( $fields as $field => $db_field) {
					if ( $element[$field]['#value'] != $element[$field]['#default_value']) {
						$element['#item']['db'][$db_field] = $element[$field]['#value'];
						$updated_items[$mlid] = $element['#item'];
					}
				}
			}
		}

		dpm( $updated_items, 'updated');

		foreach( $updated_items as $item) {
			ocs_admin_campaign_condition_save( $item['db']);
		}

		drupal_set_message( t('Your configuration has been saved.'));
	}
}

/**
 * Returns HTML for the campaign overview  form into a table.
 *
 * @param $variables
 *   An associative array containing:
 *   - form: A render element representing the form.
 *
 * @ingroup themeable
 */
function theme_ocs_admin_campaign_overview( $variables) 
{
    $output = check_plain( $variables['title']);
    $output .= '<div class="description">' . filter_xss_admin($variables['description']). '</div>';

    return $output;
}


/**
 * Returns HTML for the campaign rules  form into a table.
 *
 * @param $variables
 *   An associative array containing:
 *   - form: A render element representing the form.
 *
 * @ingroup themeable
 */
function theme_ocs_admin_campaign_rule_form($variables) 
{
    $form = $variables['form'];
    $output = ocs_admin_campaign_rule_theme( $form);

	return $output;
}

function ocs_admin_campaign_rule_theme( $form)
{
    $header = array(
        t('Rules'),
        array( 'data' => t('Items'), ),
        array( 'data' => t('Description')),
        array( 'data' => t('Operations'), 'colspan' => '3'),
    );

	$rows = array();
	//  dpm( $form, 'table form');
    if ( isset( $form['#event'])) {
        foreach ($form['#event'] as $event_id => $item) {
		  $element = &$form['#event'][$event_id];

		  // add event row

		  $row = array();
		  $row[] = array( 'data' => $element['description'], 'colspan' => '3', 
            'class' => array('description', 'bd-top'));
          $row = array_merge( $row, _operation_list( $element['operations']));
		  $rows[] = $row;

		  // list conditions and actions of each rule
          foreach( $form['#event'][$event_id]['rule'] as $rule_id => $rule) {

              $row = array();
              $row[] = array( 'data' => t('Rule @id : @name', 
                array( '@id' => $rule_id, '@name' => $rule['info']['rule_name'])),
                'colspan' => '3', 'class' => array( 'bd-top'));
              $row = array_merge( $row, _operation_list( $rule['operations']));
              $rows[] = $row;

              // add conditions
              $rows = array_merge( $rows, _get_condition_rows( $form, $rule_id, $element['#event_name']));

              // add actions
              $rows = array_merge( $rows, _get_action_rows( $form, $rule_id, $element['#event_name']));



            }
          }
	  }

	  if (empty($rows)) {
		$rows[] = array(array('data' => $form['#empty_text'], 'colspan' => '7'));
	  }
	  $footer = array(array('data' => isset($form['#footer']) ? $form['#footer'] : '', 
        'colspan' => '7', 'class' => array( 'bd-top')));

	  $output = '<br>';
	  if ( isset( $form['#caption'])) {
		  $output .= '<h3>' . $form['#caption'] . '</h3>';
	  }
	  $output .= '<div id="ocs_admin_campaign_rule_div">' ;
	  $output .= theme('table', array('header' => $header, 'footer' => $footer, 'rows' => $rows, 'attributes' => array('id' => 'menu-overview')));
	  $output .= '</div>';

	  return $output;
}

function _indentation( $tabs) 
{
    $output = '';
    for( $i =0; $i < $tabs; $i++) {
        $output .= '<div class="indentation"></div>';
    }
    return $output;
}

function theme_action_list( $list)
{
    $output = '<ul class="action-links">';
    foreach( element_children( $list) as $op) {
      $output .= '<li>'. drupal_render($list[$op]) . '</li>';
    }
    $output .= '</ul>';

    return $output;
}

function _operation_list( $list)
{
    $operations = array();
    foreach( element_children( $list) as $op) {
      $operations[] = array( 'data' => drupal_render($list[$op]),
        'class' => array('menu-operations'));
    }

    return $operations;
}

function _get_condition_rows( $form, $rule_id, $event_name)
{
    $rows = array();
    // get conditions
    $idx = 0;
	$white_cell = array( 'data' => '', 'class' => array( 'white-cell'));
    $no_cond = $form['#rule'][$rule_id]['#no_cond'];

    foreach( $form['#rule'][$rule_id]['cond'] as $conds) {
      $and_idx =0;
      foreach( $conds as $cond) {
          if ( $idx ++ == 0) {
              $row = array(
                    $white_cell,
                    array( 'data' => 'Conditions (OR)', 'colspan' => '2', ));
              $row = array_merge( $row, _operation_list( $form['#rule'][$rule_id]['cond_operations']));
              $rows[] = $row;
          }

          $row = array();
          $row[] = $white_cell;
          if ( $and_idx ++ == 0) {
              $row[] = array( 'data' => _indentation(1) . 'AND', 'rowspan' => count( $conds));
          }
          $row[] = array( 'data' => $cond['info'], 
            'class' => ($and_idx == count($conds)) ? array( 'bd-btm', 'dotted') : array());
          $row = array_merge( $row, _operation_list( $cond['operations']));
          $rows[] = $row;
      }
    }

    $t_arg = array( '@campaign' => $form['#campaign_id'], '@rule' => $rule_id);
    $q_arg = array( 'query' => array( 'event_name' => $event_name));
    if ( $no_cond == 0) {
        $rows[] = array( 
            $white_cell,
            array('data' => 'Conditions'),
            $form['#rule'][$rule_id]['#empty_cond_text'],
        );
    }

    return $rows;
}


function _get_action_rows( $form, $rule_id, $event_name) 
{
    $rows = array();
	$white_cell = array( 'data' => '', 'class' => array( 'white-cell'));
    $no_action = count( $form['#rule'][$rule_id]['action']);

    // add actions
    $idx = 0;
    foreach( $form['#rule'][$rule_id]['action'] as $action_id => $action) {
        if ( $idx ++ == 0) {
            $row = array(
                $white_cell,
                array( 'data' => 'Actions', 'colspan' => '2', 'class' => array('bd-top')));
            $row = array_merge( $row, _operation_list( $form['#rule'][$rule_id]['action_operations']));
            $rows[] = $row;
        }

        $row = array();
        $row[] = $white_cell;
        $row[] = $white_cell;
        $row[] = array( 'data' => $action['info']);
        $row = array_merge( $row, _operation_list( $action['operations']));
        $rows[] = $row;
    }

    if ( $no_action == 0) {
//        dpm( $form['#rule'][$rule_id], 'rule');

        $rows[] = array( 
            $white_cell,
            array('data' => 'Actions', 'class' => array('bd-top', 'dotted')),
            array('data' => $form['#rule'][$rule_id]['#empty_action_text'],
                'class' => array( 'bd-top', 'dotted')));
    }

    return $rows;
}

/*
** Add/Edit campaign rules
*/
function ocs_admin_campaign_rule_edit_form( $form, &$form_state, $type, $campaign_id)
{
    if ( $type == 'edit') {
        // load campaign data
        $campaign = NULL;
    }

    $form['campaign_id'] = array(
        '#type' => 'hidden',
        '#value' => $campaign_id,
    );

    $form['cond_id'] = array(
        '#type' => 'hidden',
        '#value' => isset( $campaign) ? $campaign['cond_id'] : 0,
    );

    $form['parent_id'] = array(
        '#type' => 'hidden',
        '#value' => isset( $campaign) ? $campaign['parent_id'] : 0,
    );

    $form['cond_name'] = array(
        '#type' => 'textfield',
        '#title' => 'Rule Name',
        '#description' => t('Enter Rule Name'),
        '#default_value' => isset( $campaign) ? $campaign['cond_name'] : NULL,
    );

    $form['actions'] = array('#type' => 'actions');
    $form['actions']['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save'),
    );

    return $form;
}

function ocs_admin_campaign_rule_edit_form_submit( $form, &$form_state)
{
    $campaign = $form_state['values'];
    dpm( $campaign, 'submit campaign');
    ocs_admin_campaign_rule_save($campaign);

    drupal_set_message( t('Your configuration has been saved.'));

    $form_state['redirect'] = 'ocs_admin/campaign/' . $campaign['campaign_id'];
}


/*
** Add/Edit campaign properties
*/
function ocs_admin_campaign_edit_form( $form, &$form_state, $op, $campaign_id = NULL)
{
	$campaign = ocs_admin_campaign_load( $campaign_id);

    $form['campaign_id'] = array(
        '#type' => 'hidden',
        '#value' => $campaign_id,
    );

    $form['campaign_name'] = array(
        '#type' => 'textfield',
        '#title' => 'Name',
        '#default_value' => $campaign['campaign_name'],
    );

    $form['description'] = array(
        '#type' => 'textfield',
        '#title' => 'Description',
        '#default_value' => $campaign['description'],
    );

    $form['status'] = array(
        '#type' => 'select',
        '#title' => 'Status',
        '#options' => array(
			'0' => 'Disabled',
			'1' => 'Enabled',
			),
        '#default_value' => $campaign['status'],
    );

	$date_str = isset($campaign['start_date']) ? $campaign['start_date'] : date( 'Y-m-d', time());
	dpm( $date_str, 'date str');
	$form['start_date'] = array(
		'#type' => 'date',
		'#title' => 'Start Date',
		'#default_value' => date_parse( $date_str),
	);

	$date_str = isset($campaign['end_date']) ? $campaign['end_date'] : date( 'Y-m-d', time());
	$form['end_date'] = array(
		'#type' => 'date',
		'#title' => 'End Date',
		'#default_value' => date_parse( $date_str),
	);

    $form['actions'] = array('#type' => 'actions');
    $form['actions']['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save'),
    );

    $form['actions']['cancel'] = array(
        '#type' => 'submit',
        '#value' => t('Cancel'),
    );

    return $form;
}


function ocs_admin_campaign_edit_form_validate( $form, &$form_state)
{
    $values = $form_state['values'];
	if ( $values['op'] != 'Cancel') {
		// TODO: check start & end date
		$start_date = new DateTime( sprintf( '%04d-%02d-%02d', $values['start_date']['year'] , 
				$values['start_date']['month'] , $values['start_date']['day']));
		$end_date = new DateTime( sprintf( '%04d-%02d-%02d', $values['end_date']['year'] , 
				$values['end_date']['month'] , $values['end_date']['day']));

        if ( $start_date >= $end_date) {
            form_set_error( 'end_date', 'Invalid End Date. It should be later than Start Date.');
        }
	}
}


function ocs_admin_campaign_edit_form_submit( $form, &$form_state)
{
    $values = $form_state['values'];
	if ( $values['op'] != 'Cancel') {
		$values['start_date'] = sprintf( '%04d-%02d-%02d', $values['start_date']['year'] , 
				$values['start_date']['month'] , $values['start_date']['day']);
		$values['end_date'] = sprintf( '%04d-%02d-%02d', $values['end_date']['year'] , 
				$values['end_date']['month'] , $values['end_date']['day']);

		ocs_admin_campaign_save($values);

		drupal_set_message( t('Your configuration has been saved.'));
	}

    $form_state['redirect'] = 'ocs_admin/campaign/';
}


function ocs_admin_campaign_load( $campaign_id)
{
    db_set_active('ocsdb');

    // get group information
    $query = db_select( 'ocs_campaign', 'c');
    $result = $query->condition( 'c.campaign_id', $campaign_id, '=')
        ->fields( 'c')
        ->execute()
        ->fetchAssoc( 'event_id', PDO::FETCH_ASSOC);
    
    db_set_active( 'default');

    return $result;
}

function ocs_admin_campaign_save( $campaign)
{
    db_set_active('ocsdb');

	$data = array();
	foreach( array( 'campaign_name', 'description', 'status', 'start_date', 'end_date') as $key) {
		$data[ $key] = $campaign[ $key];
	}

	$result = db_merge( 'ocs_campaign')
		->key( array( 'campaign_id' => $campaign['campaign_id']))
		->fields( $data)
		->execute();

    db_set_active( 'default');

    return $result;
}


/*
** delete campaign
*/
function ocs_admin_campaign_delete_form( $form, &$form_state, $campaign_id)
{
	$campaign = ocs_admin_campaign_load( $campaign_id);

    $form['#campaign'] = $campaign;

    $caption = '<p>'. t('This action cannot be undone...') . '</p>';

    return confirm_form( $form, t('Are you sure to delete the campaign "@name"?', 
				array( '@name' => $campaign['campaign_name'])),
			'ocs_admin/campaign/list', $caption, t('Delete'));
}

function ocs_admin_campaign_delete_form_submit( $form, &$form_state)
{
    $campaign = $form['#campaign'];

	ocs_admin_campaign_delete( $campaign['campaign_id']);

    $t_args = array( '%name' => $campaign['campaign_name']);
    drupal_set_message( t('The campaign %name has been deleted.', $t_args));
    watchdog( 'ocs_admin', 'Deleted campaign %name.', $t_args, WATCHDOG_NOTICE);

	$form_state['redirect'] = 'ocs_admin/campaign/list';
}

function ocs_admin_campaign_delete( $campaign_id)
{
    db_set_active( 'ocsdb');

    // delete the group and all subgroups
    $status = db_delete( 'ocs_campaign')
        ->condition( 'campaign_id', $campaign_id)
        ->execute();
    dpm( $status, 'db_delete result');

    db_set_active( 'default');
}



